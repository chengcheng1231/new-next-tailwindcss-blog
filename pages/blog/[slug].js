import Head from 'next/head'
import siteMetadata from '@/data/siteMetadata'
import { format, parseISO } from 'date-fns'
import { getAllPosts } from '../../lib/postData'
import { MDXLayoutRenderer } from '@/components/MDXComponents'
// import { serialize } from 'next-mdx-remote/serialize'
// import { MDXRemote } from 'next-mdx-remote'
import { getFileBySlug } from '@/lib/mdx'


export default function BlogPage({ title, date, content, post}) {
  const { mdxSource, toc, frontMatter } = post

  return (
    <div>
      <Head>
        <title>{title}</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <main>
        <div className="border-b-2 border-gray-200 mb-6">
          <h2 className="prose mb-2 text-2xl font-extrabold leading-9 tracking-tight text-gray-900 dark:text-gray-100 sm:text-3xl sm:leading-10 md:text-3xl md:leading-14">
            {title}
          </h2>
          <div className="flex items-center mb-6">
            <div className="rounded-full mr-2">
              <img src="/static/images/aboutMe.jpg" alt="profile" className="w-10 h-10 rounded-full" />
            </div>
            <div>
              <div className="text-gray-600 text-xd">
                Written by&nbsp;
                  <a href={`/about`} className="text-primary-600 hover:text-primary-400">
                    {siteMetadata.author}
                  </a>
              </div>
              <div className="text-gray-600 text-xs">
                {format(parseISO(date), 'MMM do, uuu')}
              </div>
            </div>
          </div>
        </div>
        {/* <MDXRemote {...content} /> */}
        {/* <div className="whitespace-pre">{...content}</div> */}
        {/* <MDXLayoutRenderer
          layout={'PostSimple' || DEFAULT_LAYOUT}
          toc={toc}
          mdxSource={mdxSource}
          frontMatter={frontMatter}
        /> */}
      </main>
    </div>
  )
}

export async function getStaticProps(context) {
    const { params } = context;
    const allPosts = getAllPosts();
    const { data, content} = allPosts.find((item) => item.slug === params.slug);
    // const mdxSource = await serialize(content)
    const post = await getFileBySlug('blog', params.slug)
    return {
        props: {
            title: data.title,
            date: data.date.toISOString(),
            content,
            post,
        }
    }
}

export async function getStaticPaths() {
  return {
      paths: getAllPosts().map((post) => ({
          params: {
              slug: post.slug,
          },
      })),
      fallback: false,
  }
}

